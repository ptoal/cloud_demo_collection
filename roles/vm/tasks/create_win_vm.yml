---
- name: Create public IP address
  azure.azcollection.azure_rm_publicipaddress:
    resource_group: "{{ cloud_demo_azure_resource_group }}"
    allocation_method: Static
    name: "{{ cloud_demo_azure_public_ip_name }}"
  register: output_ip_address
  when: cloud_demo_azure_public_ip

- name: Dump public IP for VM which will be created
  ansible.builtin.debug:
    msg: "The public IP is {{ output_ip_address.state.ip_address }}"
  when: cloud_demo_azure_public_ip

- name: Set Stat for Ansible Controller
  ansible.builtin.set_stats:
    data:
      azure_vm_public_ip: "{{ output_ip_address.state.ip_address }}"
    per_host: false
  when: cloud_demo_azure_public_ip

- name: Create virtual network interface card with internal ip
  azure.azcollection.azure_rm_networkinterface:
    resource_group: "{{ cloud_demo_azure_resource_group }}"
    name: "{{ cloud_demo_azure_nic_name }}"
    virtual_network: "{{ cloud_demo_azure_vnet_name }}"
    subnet: "{{ cloud_demo_azure_subnet_name }}"
    security_group: "{{ cloud_demo_azure_network_sec_group_name }}"
  when: not cloud_demo_azure_public_ip

- name: Create virtual network interface card with external ip
  azure.azcollection.azure_rm_networkinterface:
    resource_group: "{{ cloud_demo_azure_resource_group }}"
    name: "{{ cloud_demo_azure_nic_name }}"
    virtual_network: "{{ cloud_demo_azure_vnet_name }}"
    subnet: "{{ cloud_demo_azure_subnet_name }}"
    public_ip_name: "{{ cloud_demo_azure_public_ip_name }}"
    security_group: "{{ cloud_demo_azure_network_sec_group_name }}"
  when: cloud_demo_azure_public_ip

- name: Create Windows VM
  azure.azcollection.azure_rm_virtualmachine:
    resource_group: "{{ cloud_demo_azure_resource_group }}"
    name: "{{ cloud_demo_vm_name | default('demo_win_vm') }}"
    os_type: Windows
    vm_size: "{{ cloud_demo_azure_vm_size }}"
    admin_username: "{{ cloud_demo_win_admin_user }}"
    admin_password: "{{ cloud_demo_win_admin_password }}"
    network_interfaces: "{{ cloud_demo_azure_nic_name }}"
    image:
      offer: WindowsServer
      publisher: MicrosoftWindowsServer
      sku: "{{ cloud_demo_win_vm_sku }}"
      version: latest
    tags:
      deployment: ansible
      purpose: demo

- name: Create VM script extension to enable HTTPS WinRM listener
  azure.azcollection.azure_rm_virtualmachineextension:
    name: winrm-extension
    resource_group: "{{ cloud_demo_azure_resource_group }}"
    virtual_machine_name: "{{ cloud_demo_vm_name | default('demo_win_vm') }}"
    publisher: Microsoft.Compute
    virtual_machine_extension_type: CustomScriptExtension
    type_handler_version: '1.9'
    settings: '{"fileUris": ["https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1"], "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File ConfigureRemotingForAnsible.ps1"}'
    auto_upgrade_minor_version: true

- name: Wait for Host to respond
  ansible.builtin.wait_for_connection:
